[package]
name = "lc-identity-verification"
version = "0.1.0"
authors = ["Litentry dev"]
edition = "2021"

[dependencies]
# std dependencies
http_req = { optional = true, features = ["rust-tls"], branch = "master", git = "https://github.com/integritee-network/http_req" }
http = { version = "0.2", optional = true }
url = { version = "2.0.0", optional = true }
futures = { version = "0.3.8", optional = true }
hex = { version = "0.4.3", optional = true }

# sgx dependencies
http_req-sgx = { optional = true, default-features = false, features = ["rust-tls", "sgx"], package = "http_req", git = "https://github.com/integritee-network/http_req" }
http-sgx = { package = "http", git = "https://github.com/integritee-network/http-sgx.git", branch = "sgx-experimental", optional = true }
sgx_tstd = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true, features = ["net", "thread"] }
url_sgx = { package = "url", git = "https://github.com/mesalock-linux/rust-url-sgx", tag = "sgx_1.1.3", optional = true }
futures_sgx = { package = "futures", git = "https://github.com/mesalock-linux/futures-rs-sgx", optional = true }
hex-sgx = { package = "hex", git = "https://github.com/mesalock-linux/rust-hex-sgx", tag = "sgx_1.1.3", features = ["sgx_tstd"], optional = true }
thiserror_sgx = { package = "thiserror", git = "https://github.com/mesalock-linux/thiserror-sgx", tag = "sgx_1.1.3", optional = true }
thiserror = { version = "1.0.26", optional = true }

# no_std dependencies
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"] }
serde_json = { version = "1.0", default-features = false, features = ["alloc"] }
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
log = { version = "0.4", default-features = false }
lazy_static = { version = "1.1.0", features = ["spin_no_std"] }

# internal dependencies
ita-stf = { path = "../../../app-libs/stf", default-features = false }
itc-rest-client = { path = "../../../core/rest-client", default-features = false }
itp-types = { path = "../../../core-primitives/types", default-features = false }
itp-utils = { path = "../../../core-primitives/utils", default-features = false }
itp-ocall-api = { path = "../../../core-primitives/ocall-api", default-features = false }
itp-storage = { path = "../../../core-primitives/storage", default-features = false }
itp-sgx-externalities = { path = "../../../core-primitives/substrate-sgx/externalities", default-features = false }
itp-sgx-crypto = { path = "../../../core-primitives/sgx/crypto", default-features = false }

sp-std = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.28", default-features = false }
sp-io = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.28", default-features = false }
sp-core = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.28", default-features = false }
frame-support = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.28", default-features = false }

litentry-primitives = { path = "../../primitives", default-features = false }
lc-stf-task-sender = { path = "../stf-task/sender", default-features = false }

[features]
default = ["std"]
std = [
    "futures",
    "hex",
    "http",
    "http_req",
    "itc-rest-client/std",
    "log/std",
    "serde/std",
    "serde_json/std",
    "thiserror",
    "url",
    "ita-stf/std",
    "itp-types/std",
    "itp-utils/std",
    "itp-sgx-externalities/std",
    "itp-storage/std",
    "itp-sgx-crypto/std",
    "sp-std/std",
    "sp-io/std",
    "frame-support/std",
    "litentry-primitives/std",
    "lc-stf-task-sender/std",
]
sgx = [
    "futures_sgx",
    "hex-sgx",
    "http-sgx",
    "http_req-sgx",
    "itc-rest-client/sgx",
    "sgx_tstd",
    "thiserror_sgx",
    "url_sgx",
    "ita-stf/sgx",
    "itp-sgx-externalities/sgx",
    "itp-sgx-crypto/sgx",
    "litentry-primitives/sgx",
    "lc-stf-task-sender/sgx",
]
